ALTER SESSION SET current_schema = G212IF685_EQ07;


DROP TYPE tp_endereco FORCE;
DROP TYPE tp_entrega FORCE;
DROP TYPE tp_cliente FORCE;
DROP TYPE tp_cliente_pf FORCE;
DROP TYPE tp_cliente_pj FORCE;
DROP TYPE tp_telefone FORCE;
DROP TYPE v_telefone FORCE;
DROP TYPE tp_produto FORCE;
DROP TYPE tp_pedido FORCE;
DROP TYPE tp_detalhe_pedido FORCE;
DROP TYPE tp_nt_detalhe_pedido FORCE;
DROP TYPE tp_composicao FORCE;
DROP TYPE tp_pagamento FORCE;
DROP TYPE tp_compra FORCE;


/* CHECKLIST

1. CREATE OR REPLACE TYPE ✅
2. CREATE OR REPLACE TYPE BODY ✅
3. MEMBER PROCEDURE ✅
4. MEMBER FUNCTION ✅
5. ORDER MEMBER FUNCTION ✅
6. MAP MEMBER FUNCTION ✅
7. CONSTRUCTOR FUNCTION ✅
8. OVERRIDING MEMBER ✅
9. FINAL MEMBER ✅
10. NOT INSTANTIABLE TYPEMEMBER ✅
11. HERANCA DE TIPOS (UNDERNOT FINAL) ✅
12. ALTER TYPE ✅
15. REF ✅
20. VARRAY ✅

*/

CREATE OR REPLACE TYPE tp_endereco AS OBJECT (
    CEP VARCHAR2(8),
	LOGRADOURO VARCHAR2(2555),
	BAIRRO VARCHAR2(255),
	CIDADE VARCHAR2(255),
	ESTADO VARCHAR2(255),
    NUMERO NUMBER,
	APARTAMENTO NUMBER
);


CREATE OR REPLACE TYPE tp_entrega AS OBJECT (
    ID_ENTREGA NUMBER,
    STATUS_ENTREGA VARCHAR2(255),
    DATA_POSTAGEM DATE,
    DATA_ENTREGA DATE,
    ENDERECO REF tp_endereco
);


CREATE OR REPLACE TYPE tp_telefone AS OBJECT(
	NUMERO VARCHAR2(9),
	DDD VARCHAR2(2)
);


CREATE OR REPLACE TYPE v_telefone AS VARRAY(5) OF tp_telefone; 


CREATE OR REPLACE TYPE tp_cliente AS OBJECT (
	ENDERECO REF tp_endereco,
	TELEFONE v_telefone,

    MEMBER PROCEDURE documentoCliente,

    FINAL MAP MEMBER FUNCTION getTelefone RETURN NUMBER

) NOT FINAL NOT INSTANTIABLE;


CREATE OR REPLACE TYPE tp_cliente_pj UNDER tp_cliente (
    CNPJ VARCHAR2(14),
	RAZAO_SOCIAL VARCHAR2(255),
	NOME_FANTASIA VARCHAR2(255),
	STATUS_CNPJ VARCHAR2(255),
	CAPITAL_SOCIAL NUMBER,
	PORTE VARCHAR2(255),

    OVERRIDING MEMBER PROCEDURE documentoCliente
);


CREATE OR REPLACE TYPE tp_cliente_pf UNDER tp_cliente (
    CPF VARCHAR2(11),
	NOME VARCHAR2(255),
	DATA_NASCIMENTO DATE,
	SEXO VARCHAR2(1), 

	MEMBER FUNCTION idadeCliente RETURN NUMBER,
    OVERRIDING MEMBER PROCEDURE documentoCliente
);


ALTER TYPE tp_cliente ADD ATTRIBUTE (email VARCHAR2(255)) CASCADE;

CREATE OR REPLACE TYPE BODY tp_cliente( 
MAP MEMBER FUNCTION getTelefone RETURN NUMBER IS
 BEGIN
   RETURN TELEFONE;
 END;
MEMBER PROCEDURE documentoCliente IS 
	BEGIN 
		DBMS_OUTPUT.PUT_LINE('Use a especializacao para pegar o documento');
	END;
END);


CREATE OR REPLACE TYPE BODY tp_cliente_pf( 
MEMBER FUNCTION idadeCliente RETURN NUMBER IS 
	BEGIN 
		RETURN TRUNC((SYSDATE - TO_DATE(DATA_NASCIMENTO, 'YYYY-MM-DD')) / 365.25);
	END;
OVERRIDING MEMBER PROCEDURE documentoCliente IS
    BEGIN 
        DBMS_OUTPUT.PUT_LINE(SELF.CPF);
    END;
END);


CREATE OR REPLACE TYPE BODY tp_cliente_pj( 
OVERRIDING MEMBER PROCEDURE documentoCliente IS
    BEGIN 
        DBMS_OUTPUT.PUT_LINE(SELF.CNPJ);
    END;
END);


-- verificar composicao depois
CREATE OR REPLACE TYPE tp_produto AS OBJECT(
	SKU VARCHAR2(10),
	NOME VARCHAR2(255),
	DESCRICAO VARCHAR2(255),
	PRECO NUMBER,

	MEMBER PROCEDURE print_info,
    CONSTRUCTOR FUNCTION tp_produto (x1 tp_produto) RETURN SELF AS RESULT
);


CREATE OR REPLACE TYPE BODY tp_produto( 
MEMBER PROCEDURE print_info IS
    BEGIN 
        DBMS_OUTPUT.PUT_LINE(SKU);
        DBMS_OUTPUT.PUT_LINE(ID_PEDIDO);
        DBMS_OUTPUT.PUT_LINE(NOME);
        DBMS_OUTPUT.PUT_LINE(DESCRICAO);
        DBMS_OUTPUT.PUT_LINE(PRECO);
    END;
CONSTRUCTOR FUNCTION tp_produto (x1 tp_produto) RETURN SELF AS RESULT IS
    BEGIN
        SKU := x1.SKU; 
        ID_PEDIDO := x1.ID_PEDIDO; 
        NOME := x1.NOME; 
        DESCRICAO := x1.DESCRICAO;
        PRECO := x1.PRECO; 
        RETURN; 
    END;
END);


-- tp_DETALHE_PEDIDO É NESTED TABLE DE tp_PEDIDO
CREATE OR REPLACE TYPE tp_detalhe_pedido AS OBJECT(
    SKU VARCHAR2(10),
    QUANTIDADE NUMBER,

    ORDER MEMBER FUNCTION comparaQuantidade(X tp_detalhe_pedido) RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY tp_detalhe_pedido(
    ORDER MEMBER FUNCTION comparaQuantidade (X tp_detalhe_pedido) 
    RETURN NUMBER IS 
    BEGIN
        RETURN X.QUANTIDADE - SELF.QUANTIDADE
    END;
END);

CREATE OR REPLACE TYPE tp_nt_detalhe_pedido AS TABLE OF tp_detalhe_pedido;

CREATE OR REPLACE TYPE tp_pedido AS OBJECT (
    ID_PEDIDO NUMBER,
    STATUS VARCHAR2(255),
    DETALHE_PEDIDO tp_nt_detalhe_pedido,

    FINAL MAP MEMBER FUNCTION qtdProdutos RETURN NUMBER
);


CREATE OR REPLACE TYPE BODY tp_pedido( 
FINAL MAP MEMBER FUNCTION qtdProdutos RETURN NUMBER IS
selfCnt NUMBER;
    BEGIN
        SELECT sum(QUANTIDADE) INTO selfCnt
        FROM TABLE(SELF.DETALHE_PEDIDO);
        RETURN selfCnt;
    END;
END);


CREATE OR REPLACE TYPE tp_pagamento AS OBJECT (
    ID_PAGAMENTO number,
    STATUS_PAGAMENTO varchar2(255),
    DATA_PAGAMENTO date
);


-- COMPRA  --
-- ENTIDADE ASSOCIATIVA --
CREATE OR REPLACE TYPE tp_compra AS OBJECT (
    CLIENTE_PF REF tp_cliente_pf,
    CLIENTE_PJ REF tp_cliente_pj,
    PEDIDO REF tp_pedido,
    PAGAMENTO REF tp_pagamento,
    DATA_COMPRA DATE,
    VALOR_COMPRA NUMBER
);
